{
    "XADD": {
        "prefix": "xadd",
        "body": [
            "// Add to message stream and publish to channel",
            "_ = await self.valkey.execute(",
            "\tXADD(",
            "\t\tmessagesKey,",
            "\t\tidSelector: .autoId,",
            "\t\tdata: [",
            "\t\t\t.init(field: \"username\", value: \"\\(username)\"),",
            "\t\t\t.init(field: \"message\", value: \"\\(message)\"),",
            "\t\t]",
            "\t),",
            "\tPUBLISH(channel: messagesChannel, message: messageText)",
            ")"
        ],
        "description": "PUBLISH,XADD"
    },
    "XREVRANGE": {
        "prefix": "xrevrange",
        "body": [
            "// Read messages already posted. (read messages from the last 10 minutes up to a maximum of 100 messages).",
            "let id = \"\\(Int((Date.now.timeIntervalSince1970 - 600) * 1000))\"",
            "let messages = try await self.valkey.xrevrange(messagesKey, end: \"+\", start: id, count: 100)",
            "",
            "// write those messages to the websocket",
            "for message in messages.reversed() {",
            "\tguard let username = message[field: \"username\"].map({ String(buffer: \\$0) }),",
            "\t\tlet message = message[field: \"message\"].map({ String(buffer: \\$0) })",
            "\telse {",
            "\t\tcontinue",
            "\t}",
            "\ttry await outbound.write(.text(\"[\\(username)] - \\(message)\"))",
            "}"
        ],
        "description": "PUBLISH,XADD"
    }
}
